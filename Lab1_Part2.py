# -*- coding: utf-8 -*-
"""Part2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YKH_8wOqxHQERZweOaXM5TNxScIaLDOY
"""

# COMP 8347 - Internet Applications and Distributed Systems : Lab Assignment - I

# Team Details:
# 1. Abinaya Elanchezhian – 110061220
# 2. Eswaran Badrinarayanan Venkateswaran – 110069235
# 3. Lakshmi Narayanan Shankar – 110070078
# 4. Vishal Jayaraman – 110067134

from google.colab import files
uploaded = files.upload()

#@title Question a

# opening file "inventory.txt"
f = open("inventory.txt", "r") 
# printing the read contents of the file
print(f.read())

#@title Question b

# Defining 10 strings that represent a particular product
productList = {'nutella', 'donut', 'green tea', 'black tea', 'coffee', 'black coffee', 'white mushrooms', 'magic mushrooms', 'cookies', 'tea biscuits'}
productList

#@title Question c

# Looping over each item in the productList
for x in productList:
    # Opening the file in read mode
    fp = open('inventory.txt', 'r')
    # The variable a is the exit condition or flag for the while loop 
    a = True  
    while a:
      # Reading each and every string present in the line using readline() function and storing it in data
      data = fp.readline()
      # Checking if item x in productList matches data (every line read) and if there is a match, the item is printed: else the loop continues 
      if x in data:
       print(x) 
      # If the data reaches the end of file, then the loop terminates with the exit condition a = false
      if not data:
        a = False

#@title Question d

# Creating a list 'lst' for storing each matched items in the productList
lst=[]
for x in productList:
    fp = open('inventory.txt', 'r')
    a = True  
    while a:
      data = fp.readline()
      # Checking if x in productList matches with data in inventory.txt
      if x in data:
        # Appending each matched item in the list 'lst'
        lst.append(x)
      if not data:
        a = False
# Printing the list 
lst

#@title Question e

# Creating a dictionary k 
k={}
for x in productList:
    fp = open('inventory.txt', 'r')
    a = True  
    while a:
      
      data = fp.readline()
      if x in data:
        # Using strip() function to remove newline character ("\n") from the data variable
        # Using readline () function to read the quantity value from the next line
        # data is the key of datatype string in dict k 
        # readline() function will return the value (quantity) from inventory.txt and assigns it as a key-value pair - k{Product_key,Quantity_value}
        k[str(data.strip())]=int(fp.readline())
      if not data:
        a = False
# Printing the dictionary       
k

# Converting the productList as a dictionary 
d1=dict.fromkeys(productList)
d1

# Updating the dictionary d1 with the quantity value k
d1.update(k)

d1

# Creating a dict d2 to pass a new key value pair{"magic mushrooms": "2"} to the dict d1
d2={}
d2["magic mushrooms"]=2
d1.update(d2)
d1

#@title Question f

a = True
while a:
  # Getting user input (string)
  s = input()
  # Checking if user input is in the dict d1
  if s in d1:
    # If there is a match, then the value (quantity) of the dict d1 is printed
    print(d1[s])
  else:
    print("Not found")
  print("want to search again?")
  # Getting user input to continue search or not
  flag = input()
  if flag != 'yes':
    a = False

#@title Question g

a = True
while a:
  # Getting user input (string)
  s = input()
  # Checking if the exception is created using try and if one is created, the except block is executed
  try:
    print(d1[s])
  except:
    # Printing the exception message
    print("Not found")
  # Prompting the user to conduct a new search or not
  print("want to search again?")
  # Storing the user input into a flag variable
  flag = input()
  if flag != 'yes':
    a = False